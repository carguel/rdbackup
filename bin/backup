#!/usr/bin/env ruby

lib_dir=File.expand_path(File.join(File.dirname(__FILE__), '../lib'))
$LOAD_PATH.unshift(lib_dir) unless $LOAD_PATH.include?(lib_dir)

require 'thor'
require 'backup'

class BackupCli < Thor

  include Thor::Actions

  desc "go CONFIF", <<-DOC
Make a backup considering the given YAML configuration file.
If CONFIG is not provided try to load ~/.backup.conf or /etc/backup.conf.
  DOC
  def go(config=nil)
    config ||= default_config

    if config.nil?
      error("No YAML configuration file found. Aborting.")
      exit 1
    end


    begin
    app = Backup::Application.new config
      app.backup
    rescue Exception => message
      error ""
      error "An error occured during backup with the following message : #{message}"
      exit 1
    end
  end


  no_tasks do

    # Identify the default configuration.
    def default_config
      config = nil
      catch(:config_found) {
        [File.join(ENV["HOME"], ".backup.conf"), File.join("/etc", "backup.conf")].each do |conf|
          if File.exist? conf
            config = conf
            throw :config_found
          end
        end
      }

      return config
    end

  end
end

BackupCli.start
